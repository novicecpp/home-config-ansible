---
# start from https://wiki.archlinux.org/title/Installation_guide#Time_zone
# timezone
- name: zurich timezone
  ansible.builtin.file:
    src:  /usr/share/zoneinfo/Europe/Zurich
    dist: /etc/localtime
    state: link

# hwclock (?)
- name: hwclock
  ansible.builtin.shell: hwclock --systohc

# locale
- name: edit locale.gen
  ansible.builtin.lineinfile:
    path: /etc/locale2.gen
    regexp: '#en_US\.UTF-8 UTF-8'
    line: 'en_US.UTF-8 UTF-8'
    backrefs: true
- name: run locale-gen
  ansible.builtin.shell: local-gen
- name: create /etc/locale.conf
  ansible.builtin.copy:
    content: |
      LANG=en_US.UTF-8
    dest: /etc/locale.conf
    owner: root
    group: root
    mode: '0644'

# network
- name: create hostname
  ansible.builtin.copy:
    content: |
      localhost
    dest: /etc/hostname
    owner: root
    group: root
    mode: '0644'

# disk encryption
- name: replace line in /etc/mkinitcpio.conf
  ansible.bulitin.lineinfile:
    path: /etc/mkinitcpio.conf
    regexp: '^HOOKS=\('
    line: 'HOOKS=(base udev autodetect modconf kms keyboard keymap consolefont block encrypt filesystems fsck)'
    backrefs: yes
- name: generate initramfs.img to support disk encryption
  ansible.builtin.shell: mkinitcpio -P

# grub install
- name: install grub
  ansible.builtin.shell:
    cmd: >-
      grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB --modules="tpm" --disable-shim-lock
    executable: /bin/bash
- name: get luks disk uuid
  ansible.builtin.shell:
    cmd: blkid | grep crypto_LUKS | awk -F '"' '{print $2}'
    executable: /bin/bash
  register: luks_disk_uuid
- name: replace line in /etc/default/grub for encrypted root
  ansible.bulitin.lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX='
    line: GRUB_CMDLINE_LINUX="cryptdevice={{ luks_disk_uuid.stdout }}:root root=/dev/mapper/root"
    backrefs: yes
- name: replace line in /etc/default/grub for os-prober
  ansible.bulitin.lineinfile:
    path: /etc/default/grub
    regexp: '^#GRUB_DISABLE_OS_PROBER=false'
    line: GRUB_DISABLE_OS_PROBER=false
    backrefs: yes
- name: generate grub config
  ansible.bulitin.shell:
    cmd: grub-mkconfig -o /boot/grub/grub.cfg
    executable: /bin/bash

# edit fstab mount option
#- name: get /dev/mapper/root disk uuid
#  ansible.builtin.shell:
#    cmd: blkid | grep /dev/mapper/root | awk -F '"' '{print $2}'
#    executable: /bin/bash
#  register: root_disk_uuid

- name: edit btrfs mount option
  ansible.builtin.replace:
    path: /etc/fstab
    regexp: 'rw,relatime,ssd,space_cache=v2,subvol'
    replace: 'rw,noatime,ssd,space_cache=v2,compress-force=zstd:1,discard=async,subvol'

- name: enable base services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enable: true
  loop:
    - gdm
    - NetworkManager

- name: boot to GUI
  ansible.builtin.shell: systemctl set-default graphical.target
